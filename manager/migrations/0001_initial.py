# Generated by Django 5.2.3 on 2025-06-12 14:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=100, verbose_name='団体名')),
                ('attraction_name', models.CharField(max_length=100, verbose_name='出し物名')),
                ('description', models.TextField(blank=True, verbose_name='紹介文')),
                ('video_url', models.URLField(blank=True, help_text='動画の埋め込みURL等を指定します。', verbose_name='紹介動画URL')),
                ('capacity', models.PositiveIntegerField(verbose_name='収容人数')),
                ('current_visitors', models.PositiveIntegerField(default=0, verbose_name='現在の人数（並んでいる人を含む）')),
                ('total_visitors', models.PositiveIntegerField(default=0, verbose_name='累計来場者数')),
                ('is_theater', models.BooleanField(default=False, verbose_name='演劇フラグ')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='開演時間')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='閉演時間')),
                ('status', models.CharField(default='available', max_length=20, verbose_name='現在の状態')),
                ('likes_count', models.PositiveIntegerField(default=0, verbose_name='高評価数')),
                ('entry_qr_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('exit_qr_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('visitor', '来場者'), ('admin', '管理者'), ('gacha', 'ガチャ職員'), ('signage', 'サイネージ')], default='visitor', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GachaTicket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='チケット確認用QRコードの中身', primary_key=True, serialize=False)),
                ('is_used', models.BooleanField(default=False, verbose_name='使用済みフラグ')),
                ('issued_at', models.DateTimeField(auto_now_add=True, verbose_name='発行日時')),
                ('used_at', models.DateTimeField(blank=True, null=True, verbose_name='使用日時')),
                ('used_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='used_tickets', to=settings.AUTH_USER_MODEL, verbose_name='使用を承認した職員')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='所有ユーザー')),
            ],
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='日時')),
                ('action', models.CharField(max_length=255, verbose_name='操作内容')),
                ('details', models.TextField(blank=True, verbose_name='詳細')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='操作ユーザー')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='評価日時')),
                ('attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.attraction', verbose_name='出し物')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザー')),
            ],
            options={
                'unique_together': {('user', 'attraction')},
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed_at', models.DateTimeField(auto_now_add=True, verbose_name='完了日時')),
                ('attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.attraction', verbose_name='出し物')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザー')),
            ],
            options={
                'unique_together': {('user', 'attraction')},
            },
        ),
    ]
